<!DOCTYPE html>

<html xmlns="http://www.w3.org/1999/xhtml" lang="fr" xml:lang="fr">
<head>

  <meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
  <title>Lode Runner par Charles Morin et Andrew Aboujaoudé</title>
  <link rel="stylesheet" type="text/css" href="" />
  <!-- Code JavaScript local -->
  <script type="text/javascript">
	let objCanvas = null;
	let objC2D = null;
	let objCycleAnimation = null;

	//
	const CELL_HEIGHT = 17;
	const CELL_WIDTH = 28;

	//Images 
	let imgEchelle = null;
	let imgBrique = null;
	let imgCoffre = null;

	let objLodeRunner = null;

	let imgNiveau = null;

	//Niveau
	let tabNiveau = new Array();

	/**
	 * Initialiser le niveau
	 * MAP CONVERT rgb
	 *BRICK = RED(255, 0, 0)
	 *COFFRE = JAUNE(220, 225, 0)
     *ECHELLE = BRUN(130, 70, 25)
	 * -1 = vide
	 * 0  = échelle
	 * 1 = brique
	 * 2 = coffre
	 */
	function initNiveau() {
		objC2D.save();
		//Charger l'image du niveau

		imgNiveau = new Image();
		imgNiveau.src = 'niveauTest.png';
		let tableauTemp = new Array();

		imgNiveau.onload = function() {
			//Dessiner l'image sur le canvas
			objC2D.drawImage(imgNiveau, 0, 0);

			//Convertir l'image en un tableau de pixels
			const objPixels = objC2D.getImageData(0, 0, CELL_WIDTH, CELL_HEIGHT);

			//Lire les pixels
			let cell_id = 0;
			for(let p = 0; p < objPixels.data.length; p += 4) {
						
				const RED = objPixels.data[p];
				const GREEN = objPixels.data[p + 1];
				const BLUE = objPixels.data[p + 2];

				console.log("RGB("+RED+", "+GREEN+", "+BLUE+")");
				//Si le pixel est Brun(130, 70, 25) alors la case est une échelle
				if((RED >= 125 && RED <= 135) && (GREEN >= 65 && GREEN <= 75) && (BLUE >= 20 && BLUE <= 30))
					tableauTemp[cell_id] = 0;
				//Si le pixel est Rouge(255, 0, 0) alors la case est une brique
				else if(RED >= 254 && GREEN <= 5 && BLUE <= 5)
					tableauTemp[cell_id]  = 1;
				//Si le pixel est Jaune(225, 225, 0) alors la case est un coffre
				else if((RED >= 220 && RED <= 230) && (GREEN >= 220 && GREEN <= 230) && BLUE == 0)
					tableauTemp[cell_id]  = 2;
				//Sinon la case est vide
				else 
					tableauTemp[cell_id]  = -1;
				cell_id++;
			}

			console.log("Tableau remplis");
			console.log("Size: "+tableauTemp.length);

			//Séparer le tableau en un tableau a 2 dimensions
			let ligne = 0;
			while(tableauTemp.length) {
				tabNiveau[ligne] = tableauTemp.splice(0, 28);
				ligne++;
			}
			console.log("Tableau Séparer");
			console.log("Ancien Tableau: "+tableauTemp.length);
			console.log("Nouveau Tableau: "+tabNiveau.length);
			console.log(tabNiveau[1][2]);
			effacerDessin();
		}
	}
        
    function initAnimation() {
        objCanvas = document.getElementById('monCanvas');
		objCanvas.focus();
        objC2D = objCanvas.getContext('2d');
		initNiveau();
		initSprites();
	    dessiner(); // Dessiner une première fois
        animer();  // animer
    }

	/**
     *Fonction qui charge toutes les images nécèssaires au jeu
	 */
	function initSprites() {
		imgEchelle = new Image();
		imgEchelle.src = 'echelle.png';
		imgBrique = new Image();
		imgBrique.src = 'brique.png';
		imgCoffre = new Image();
		imgCoffre.src = 'coffre.png';
	}

	/**
	 * 
	 */
	function initLodeRunner() {

	}

    // Un cycle d'animation	
    function animer() {
        // Requête pour le prochain cycle
        objCycleAnimation = requestAnimationFrame(animer);

		// Le cycle d'animation
		effacerDessin();
		mettreAjourAnimation();
		dessiner();
	}

    // Arrêter l'animation
	function arreterAnimation() {
	    if (objCycleAnimation != null)
	        cancelAnimationFrame(objCycleAnimation);
		objCycleAnimation = null;
	}
		
	// Pour effacer le dessin
	function effacerDessin() {
		objC2D.clearRect(0,0, objCanvas.width, objCanvas.height); 
	}
	
	// Pour mettre à jour l'animation
	function mettreAjourAnimation() {
	}

    // Pour dessiner
	function dessiner() {
		dessinerNiveau();
		//dessinerLadder();
		dessinerGrid();
	}

	function dessinerNiveau() {
		objC2D.save();
		dessinerBackground();
		for(let i = 0; i < tabNiveau.length; i++) {
			for(let j = 0; j < tabNiveau[i].length; j++) {
				objImage = new Image();
				switch(tabNiveau[i][j]) {
					case 0:
					objImage = imgEchelle;
						break;
					case 1:
					objImage = imgBrique;
						break;
					case 2:
					objImage = imgCoffre;
						break;
				}
				objC2D.drawImage(objImage, j * 32, i * 32);
			}
		}
		objC2D.restore();
	}

	function dessinerBackground() {
		objC2D.save();
		objC2D.fillStyle = 'black';
		objC2D.fillRect(0, 0, objCanvas.width, objCanvas.height);
		objC2D.restore();
	}

	function dessinerLadder() {
		objC2D.save();
		for(let i = 0; i < 28; i++) {
			for(let j = 0; j < 17; j++) {
				objC2D.drawImage(imgBrique, i * 32, j * 32);
			}
		}
		objC2D.restore();
	}

	function dessinerGrid() {
		objC2D.save();
		for(let i = 0; i < 28; i++) {
			for(let j = 0; j < 17; j++) {
				objC2D.lineWidth = 2;
				objC2D.strokeStyle = 'green';
				objC2D.strokeRect(i * 32, j * 32, objCanvas.width, objCanvas.height);
			}
		}
		objC2D.restore();
	}



   </script>
</head>

<body onload="initAnimation()"> 
	<canvas id="monCanvas" width="896" height="544" tabIndex="1" onkeydown="">
		Votre navigateur ne supporte pas la balise canvas
	</canvas>
</body>

</html>